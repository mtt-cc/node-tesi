{{ if .Values.npDiscovery.enabled }}
{{- $npDiscoveryConfig := (merge (dict "name" "np-discovery" "module" "np-discovery") .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "fluidos.labels" $npDiscoveryConfig | nindent 4 }}
  name: np-fluidos-discovery
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fluidos.labels" $npDiscoveryConfig | nindent 6 }}
  template:
    metadata:
    {{ if .Values.rearController.pod.annotations }}
      annotations:
        {{- toYaml .Values.rearController.pod.annotations | nindent 8 }}
    {{ end }}
      labels:
        {{- include "fluidos.labels" $npDiscoveryConfig | nindent 8 }}
      {{ if .Values.rearController.pod.labels }}
        {{ toYaml .Values.rearController.pod.labels | nindent 8 }}
      {{ end }}
    spec:
      {{- if gt .Values.rearController.replicas 1.0 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "fluidos.labels" $npDiscoveryConfig | nindent 18 }}
              topologyKey: kubernetes.io/hostname
      {{- end }}
      securityContext:
        {{- include "fluidos.podSecurityContext" $npDiscoveryConfig | nindent 8 }}
      serviceAccountName: {{ include "fluidos.prefixedName" $npDiscoveryConfig }}
      containers:
      - name: {{ .Values.npDiscovery.name }}
        image: {{ .Values.npDiscovery.imageName }}
        securityContext:
          {{- include "fluidos.containerSecurityContext" $npDiscoveryConfig | nindent 10 }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -qq && \
            apt-get install -y -qq --no-install-recommends iproute2 && \
            apt-get clean && \
            rm -rf /var/lib/apt/lists/* && \
            echo "Dependencies installed, verifying..." && \
            ip -V && \
            echo "Starting application..."
            # Your application start command here
            /usr/bin/python3 /app/k8s_main.py
        env:
          - name: NP_BOOTSTRAP_URL
            value: {{ .Values.npDiscovery.np_bootstrap_url | quote }}

      {{- if (.Values.common).nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.common.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if ((.Values.common).tolerations) }}
      tolerations:
      {{- toYaml .Values.common.tolerations | nindent 8 }}
      {{- end }}
      {{- if ((.Values.common).affinity) }}
      affinity:
      {{- toYaml .Values.common.affinity | nindent 8 }}
      {{- end }}
{{- end }}
